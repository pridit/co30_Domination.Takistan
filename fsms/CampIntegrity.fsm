class FSM
{
  fsmName = "CampIntegrity";
  class States
  {
    class Start
    {
      name = "Start";
      init = "private [""_target"", ""_pos""];" \n
       "_target = _this select 0;" \n
       "_pos = _this select 1;" \n
       "_timenow = time + 60;";
      precondition = "";
      class Links
      {
        class MT_Completed
        {
          priority = 1.000000;
          to="End";
          precondition = "";
          condition="(X_JIPH getVariable ""d_current_target_index"") != _target || {(X_JIPH getVariable ""d_the_end"")}";
          action="";
        };
        class Delay
        {
          priority = 0.000000;
          to="Check_Camps";
          precondition = "";
          condition="time > _timenow";
          action="";
        };
      };
    };
    class Sleep
    {
      name = "Sleep";
      init = "_timenow = time + 600;";
      precondition = "";
      class Links
      {
        class MT_Completed
        {
          priority = 1.000000;
          to="End";
          precondition = "";
          condition="(X_JIPH getVariable ""d_current_target_index"") != _target || {(X_JIPH getVariable ""d_the_end"")}";
          action="";
        };
        class Delay_Random
        {
          priority = 0.000000;
          to="Check_Camps";
          precondition = "";
          condition="time > _timenow";
          action="";
        };
      };
    };
    class Check_Camps
    {
      name = "Check_Camps";
      init = "_camps = nearestObjects [_pos, [""Land_fortified_nest_big_EP1""], 350];" \n
       "if (count _camps < d_sum_camps) then {" \n
       "    diag_log format [""Main Target: Camp integrity compromised (%1/%2) - forcing cycle"", count _camps, d_sum_camps];" \n
       "    d_kb_logic1 kbTell [d_kb_logic2, d_kb_topic_side, ""MTBadIntegrity"", true];" \n
       "    0 = [] execVM 'x_server\x_target_clear.sqf';" \n
       "};" \n
       "_timenow = time + 30;";
      precondition = "";
      class Links
      {
        class Delay_Random2
        {
          priority = 0.000000;
          to="Sleep";
          precondition = "";
          condition="time > _timenow";
          action="";
        };
      };
    };
    class End
    {
      name = "End";
      init = "";
      precondition = "";
      class Links
      {
      };
    };
  };
  initState="Start";
  finalStates[] =
  {
    "End",
  };
};
